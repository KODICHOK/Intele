
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

class Phone:
    def __init__(self, brand, model, price):
        self.brand = brand
        self.model = model
        self.price = price

    def __str__(self):
        return f"{self.brand} {self.model} - {self.price} –≥—Ä–Ω"

phones = [
    Phone("Apple", "iPhone 14", 40000),
    Phone("Samsung", "Galaxy S23", 35000),
    Phone("Xiaomi", "Redmi Note 13", 12000),
    Phone("OnePlus", "11 Pro", 30000)
]

user_carts = {}

def get_main_menu():
    return [["üì± –¢–µ–ª–µ—Ñ–æ–Ω–∏", "üõí –ö–æ—à–∏–∫"], ["‚úÖ –ó–∞–º–æ–≤–∏—Ç–∏", "‚ùå –û—á–∏—Å—Ç–∏—Ç–∏"]]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_carts[user.id] = []
    await update.message.reply_text(
        f"–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! üëã\n–Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –∑–∞–º–æ–≤–∏—Ç–∏ –º–æ–±—ñ–ª—å–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω.",
        reply_markup=ReplyKeyboardMarkup(get_main_menu(), resize_keyboard=True)
    )

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text

    if text == "üì± –¢–µ–ª–µ—Ñ–æ–Ω–∏":
        msg = "–î–æ—Å—Ç—É–ø–Ω—ñ —Ç–µ–ª–µ—Ñ–æ–Ω–∏:\n"
        for i, p in enumerate(phones, start=1):
            msg += f"{i}. {p}\n"
        msg += "\n–í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –∫–æ—à–∏–∫–∞."
        await update.message.reply_text(msg)

    elif text.isdigit():
        index = int(text) - 1
        if 0 <= index < len(phones):
            user_carts.setdefault(user_id, []).append(phones[index])
            await update.message.reply_text(f"{phones[index]} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞ ‚úÖ")
        else:
            await update.message.reply_text("–ù–µ–≤—ñ—Ä–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É.")

    elif text == "üõí –ö–æ—à–∏–∫":
        cart = user_carts.get(user_id, [])
        if not cart:
            await update.message.reply_text("–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.")
        else:
            msg = "–í–∞—à –∫–æ—à–∏–∫:\n"
            total = 0
            for p in cart:
                msg += f"- {p}\n"
                total += p.price
            msg += f"\n–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {total} –≥—Ä–Ω"
            await update.message.reply_text(msg)

    elif text == "‚úÖ –ó–∞–º–æ–≤–∏—Ç–∏":
        cart = user_carts.get(user_id, [])
        if not cart:
            await update.message.reply_text("–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π üò¢")
        else:
            total = sum(p.price for p in cart)
            await update.message.reply_text(f"–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—É–º—É {total} –≥—Ä–Ω! üì¶\n–ú–µ–Ω–µ–¥–∂–µ—Ä –∑ –≤–∞–º–∏ –∑–≤'—è–∂–µ—Ç—å—Å—è.")
            user_carts[user_id] = []

    elif text == "‚ùå –û—á–∏—Å—Ç–∏—Ç–∏":
        user_carts[user_id] = []
        await update.message.reply_text("–ö–æ—à–∏–∫ –æ—á–∏—â–µ–Ω–æ.")

    else:
        await update.message.reply_text("–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –º–µ–Ω—é ‚¨áÔ∏è")

async def main():
    TOKEN = "7532983760:AAFqY5JF_fzqRaRwtQ7QV4fvtaG-2uoy1AY"  # ‚Üê —Å—é–¥–∏ –≤—Å—Ç–∞–≤ —Å–≤—ñ–π Telegram Bot Token
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    await app.run_polling()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
